Executing bindgen...                                                                                running 2 tests

üîç MINIMAL DEBUG: Forge Call Only - FIXED ADDRESSING
====================================================
has_not_seen_genesis: true
[2, 0, 0], Cellpack { target: AlkaneId { block: 2, tx: 0 }, inputs: [0] }
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
üîç TRACE: Template block deployment at block 0
   ‚Ä¢ TX 0 traces:
   ‚Ä¢ TX 1 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 797 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 797 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 797 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({[47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1], [47, 116, 111, 116, 97, 108, 95, 115, 117, 112, 112, 108, 121]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}), data: [] }, fuel_used: 0 })]
   ‚Ä¢ TX 2 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 1537 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 1537 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 1537 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({[47, 99, 111, 117, 112, 111, 110, 95, 115, 116, 97, 116, 101]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1]}), data: [] }, fuel_used: 0 })]
   ‚Ä¢ TX 3 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 1793 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 1793 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 1793 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({[47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1]}), data: [] }, fuel_used: 0 })]
   ‚Ä¢ TX 4 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 65518 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 65518 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 65518 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([AlkaneTransfer { id: AlkaneId { block: 4, tx: 65518 }, value: 1 }]), storage: StorageMap({[47, 97, 117, 116, 104, 95, 108, 101, 118, 101, 108]: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 99, 114, 101, 97, 116, 105, 111, 110, 95, 98, 108, 111, 99, 107]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 101, 120, 112, 105, 114, 121, 95, 98, 108, 111, 99, 107]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1], [47, 105, 115, 115, 117, 101, 114, 95, 105, 100]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}), data: [] }, fuel_used: 0 })]
‚úÖ Templates deployed: 3,n ‚Üí instances at 4,n
has_not_seen_genesis: false
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
ALKANES: revert: Error: Unrecognized opcode
Alkanes message reverted with error: ALKANES: revert: Error: Unrecognized opcode
Refunding to refund_pointer: 0
REFUND: Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
‚úÖ DUST token call: 4,797,77 (CORRECT addressing)

üî• STEP: Minimal Forge Call (No DUST)
has_not_seen_genesis: false
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
ALKANES: revert: Error: Unrecognized opcode
Alkanes message reverted with error: ALKANES: revert: Error: Unrecognized opcode
Refunding to refund_pointer: 0
REFUND: Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
üîç TRACE: Minimal forge call at block 5
   ‚Ä¢ Forge vout 3 trace: [EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 1793 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 1793 }, fuel: 3500000 }), RevertContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({}), data: [8, 195, 121, 160, 65, 76, 75, 65, 78, 69, 83, 58, 32, 114, 101, 118, 101, 114, 116, 58, 32, 69, 114, 114, 111, 114, 58, 32, 85, 110, 114, 101, 99, 111, 103, 110, 105, 122, 101, 100, 32, 111, 112, 99, 111, 100, 101] }, fuel_used: 0 })]
‚úÖ Minimal forge call completed
test tests::debug_minimal_test::test_minimal_debug_forge_call ... ok

üîç MINIMAL DEBUG: Factory Deployment Only
=========================================

üì¶ STEP 1: Template Deployment
has_not_seen_genesis: true
[2, 0, 0], Cellpack { target: AlkaneId { block: 2, tx: 0 }, inputs: [0] }
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
üîç TRACE: Template block deployment at block 0
   ‚Ä¢ TX 0 traces:
   ‚Ä¢ TX 1 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 797 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 797 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 797 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({[47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1], [47, 116, 111, 116, 97, 108, 95, 115, 117, 112, 112, 108, 121]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}), data: [] }, fuel_used: 0 })]
   ‚Ä¢ TX 2 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 1537 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 1537 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 1537 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({[47, 99, 111, 117, 112, 111, 110, 95, 115, 116, 97, 116, 101]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1]}), data: [] }, fuel_used: 0 })]
   ‚Ä¢ TX 3 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 1793 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 1793 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 1793 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({[47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1]}), data: [] }, fuel_used: 0 })]
   ‚Ä¢ TX 4 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 4, tx: 65518 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 65518 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 65518 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([AlkaneTransfer { id: AlkaneId { block: 4, tx: 65518 }, value: 1 }]), storage: StorageMap({[47, 97, 117, 116, 104, 95, 108, 101, 118, 101, 108]: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 99, 114, 101, 97, 116, 105, 111, 110, 95, 98, 108, 111, 99, 107]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 101, 120, 112, 105, 114, 121, 95, 98, 108, 111, 99, 107]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1], [47, 105, 115, 115, 117, 101, 114, 95, 105, 100]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}), data: [] }, fuel_used: 0 })]
‚úÖ Templates deployed successfully

üí® STEP 2: DUST Token Deployment
has_not_seen_genesis: false
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
   ‚Ä¢ TX 0 traces:
     - vout 3: [CreateAlkane(AlkaneId { block: 2, tx: 1 }), EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 2, tx: 1 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 1000000, 100000, 1000000000, 1413829460, 1129269582, 5526356, 0] }, target: AlkaneId { block: 2, tx: 1 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({[47, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100]: [1], [47, 116, 111, 116, 97, 108, 95, 115, 117, 112, 112, 108, 121]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}), data: [] }, fuel_used: 0 })]
‚úÖ DUST token deployed successfully

üè≠ STEP 3: Factory Initialization
has_not_seen_genesis: false
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
ALKANES: revert: Error: already initialized
Alkanes message reverted with error: ALKANES: revert: Error: already initialized
Refunding to refund_pointer: 0
REFUND: Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
   ‚Ä¢ TX 0 traces:
     - vout 3: [EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 1793 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [0, 2, 797, 144, 5, 4, 1537, 0, 0] }, target: AlkaneId { block: 4, tx: 1793 }, fuel: 3500000 }), RevertContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({}), data: [8, 195, 121, 160, 65, 76, 75, 65, 78, 69, 83, 58, 32, 114, 101, 118, 101, 114, 116, 58, 32, 69, 114, 114, 111, 114, 58, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100] }, fuel_used: 0 })]
‚úÖ Factory initialized successfully

üìä STEP 4: Simple Getter Test
has_not_seen_genesis: false
Protostone pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
Protostone refund_pointer (0) points to Bitcoin address: 2N94cRAKAA8mjvVNPCUF4Pp9RgcxSUJFLqF
üîç TRACE: Simple getter call at block 5
   ‚Ä¢ Getter vout 3 trace: [EnterCall(TraceContext { inner: Context { myself: AlkaneId { block: 4, tx: 797 }, caller: AlkaneId { block: 0, tx: 0 }, vout: 3, incoming_alkanes: AlkaneTransferParcel([]), inputs: [10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, target: AlkaneId { block: 4, tx: 797 }, fuel: 3500000 }), ReturnContext(TraceResponse { inner: ExtendedCallResponse { alkanes: AlkaneTransferParcel([]), storage: StorageMap({}), data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, fuel_used: 0 })]
‚úÖ Simple getter test completed

üéØ MINIMAL DEBUG RESULT: Deployment and getter test successful!
test tests::debug_minimal_test::test_minimal_debug_factory_deployment ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 filtered out; finished in 9.75s

                                                  
running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

